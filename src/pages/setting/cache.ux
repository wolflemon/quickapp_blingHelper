<import
  name="q-checkbox-group"
  src="qaui/src/components/checkbox-group/index"
></import>
<import name="q-checkbox" src="qaui/src/components/checkbox/index"></import>
<import name="q-button" src="qaui/src/components/button/index"></import>

<template>
  <div>
    <div class="wrap" if="cache">
      <stack>
        <div class="mask" onclick="close"></div>
        <div class="popup fade-in-bottom">
          <q-checkbox-group
            id="myGroup"
            current="{{current}}"
            onchange="handleChange"
          >
            <q-checkbox
              group="myGroup"
              type="list"
              for="{{list}}"
              value="{{$item.id}}"
            ></q-checkbox>
          </q-checkbox-group>
          <q-button class="button" type="primary" onclick="clearData"
            >清除数据</q-button
          >
        </div>
      </stack>
    </div>
  </div>
</template>
<script>
export default {
  data() {
    return {
      cache: false,
      list: [
        {
          id: 1,
          value: '历史记录',
        },
        {
          id: 3,
          value: 'Cookies',
        },
        {
          id: 4,
          value: '缓存',
        },
        {
          id: 5,
          value: '表单密码',
        },
      ],
      current: ['历史记录', 'Cookies', '缓存', '表单密码'],
    }
  },
  props: {
    visible: {
      type: Boolean,
      default: false,
    },
  },
  onInit() {
    this.$watch('visible', (n, o) => (this.cache = n))
  },
  handleChange({ detail }) {
    const index = this.current.indexOf(detail.value)
    index === -1
      ? this.current.push(detail.value)
      : this.current.splice(index, 1)
    console.log(this.current)
  },
  close() {
    this.cache = false
    this.$emit('close')
  },
  clearData() {
    clearStorageData()
    this.cache = false
  },
}
</script>
<style lang="less">
.wrap {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  stack {
    justify-content: center;
    align-items: center;
  }
  .mask {
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }
  .popup {
    width: 500px;
    height: 660px;
    padding: 50px 20px;
    border-radius: 20px;
    background-color: #ffffff;
    flex-direction: column;
    justify-content: space-between;
  }
}
.f77d1ed7 {
  color: #f0f8ff;
}
.fade-in-bottom {
  animation-name: fade_in_bottom;
  animation-duration: 600ms;
  animation-timing-function: cubic-bezier(0.39, 0.575, 0.565, 1);
  animation-fill-mode: forwards;
}

@keyframes fade_in_bottom {
  0% {
    transform: translateY(250px);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
</style>
